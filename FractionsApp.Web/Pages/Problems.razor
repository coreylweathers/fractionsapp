@page "/problems"
@inject HttpClient Http

<h3>Problems</h3>

@if (problems is null)
{
    <p><em>Loading...</em></p>
}
else if (problems.Count == 0)
{
    <p>No problems available.</p>
}
else
{
    <ul class="list-group">
        @foreach (var problem in problems)
        {
            <li class="list-group-item">
                <strong>@problem.Question</strong>
                <ul>
                    @foreach (var option in problem.Options)
                    {
                        <li>@option</li>
                    }
                </ul>
                <p><em>Answer: @problem.Answer</em></p>
                <p><small>@problem.Explanation</small></p>
            </li>
        }
    </ul>
}
}

@code {
    protected List<Problem>? problems = null;

    override protected async Task OnInitializedAsync()
    {
        if (Http is null)
        {
            throw new InvalidOperationException("HttpClient is not initialized.");
        }

        problems = await Http.GetFromJsonAsync<List<Problem>>("sample-data/problems.json");

    }

    protected record Problem
    {
        public required string Question { get; set; } // Added 'required' modifier to ensure non-null value
        public required string Answer { get; set; } // Added 'required' modifier to ensure non-null value
        public required string[] Options { get; set; } // Added 'required' modifier to ensure non-null value
        public required string Explanation { get; set; } // Added 'required' modifier to ensure non-null value
    }
}

